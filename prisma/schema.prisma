// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider                    = "node node_modules/prisma-nestjs-graphql/index.js"
  output                      = "../src/@generated"
  noAtomicOperations          = false
  combineScalarFilters        = false
  reExport                    = None
  emitSingle                  = false
  emitCompiled                = false
  purgeOutput                 = false
  fields_Validator_from       = "class-validator"
  fields_Validator_input      = true
  fields_Scalars_from         = "graphql-scalars"
  fields_Scalars_input        = true
  useInputType_WhereInput_ALL = "WhereInput"
}

model User {
  id               String   @id @default(uuid())
  password         String
  email            String   @unique @db.VarChar(60)
  emailConfirmed   Boolean  @default(false) @map("email_confirmed")
  twoFactorEnabled Boolean  @default(true) @map("two_factor_enabled")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  status           Status   @default(ACTIVE)
  role             Role     @default(USER)
  profile          Profile?

  @@map("user")
}

model Profile {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(40)
  bio       String?  @db.VarChar(300)
  avatarUrl String?  @map("avatar_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profile")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
}
